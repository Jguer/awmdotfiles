#! /bin/bash
#################################################################################
#     File Name           :     restore_symlinks.sh
#     Created By          :     jguer
#     Creation Date       :     [2016-05-20 02:01]
#     Last Modified       :     [2016-08-18 18:38]
#     Description         :      restores apps and app config
#################################################################################

#config
INSTALLER="yay -S --needed --noconfirm "
declare -a install_array
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
ZENITY=true

# Usage Function
function usage() {
cat <<_EOT_
Usage:
  $0 -d -i
Description:
  Restore dotfiles and applications
Options:
  -c    use cli
  -h    display help
_EOT_
exit 1
}

restore_shell()
{
  $INSTALLER fish
  sudo chsh jguer -s /usr/bin/fish
  # curl -Ls https://raw.github.com/rafaelrinaldi/pure/master/installer.fish > /tmp/pure_installer.fish
  # source /tmp/pure_installer.fish; and install_pure
}

restore_icon() {
  local _themename="Paper"
  $INSTALLER paper-icon-theme-git
  if [[ "$CHOICE" =~ "Restore Budgie" ]]; then
    gsettings set org.gnome.desktop.interface icon-theme ${_themename}
  fi

  if [[ "$CHOICE" =~ "Restore Cinnamon" ]]; then
    gsettings set org.gnome.desktop.interface icon-theme ${_themename}
  fi

  sudo sed -i 's/#icon-theme-name=/icon-theme-name=Paper/' /etc/lightdm/lightdm-gtk-greeter.conf
}

restore_theme() {
  local _themename="Adapta"
  $INSTALLER adapta-gtk-theme
  if [[ "$CHOICE" =~ "Restore Budgie" ]]; then
    gsettings set org.gnome.desktop.interface gtk-theme ${_themename}
    gsettings set org.gnome.desktop.wm.preferences theme ${_themename}
  fi

  if [[ "$CHOICE" =~ "Restore Cinnamon" ]]; then
    gsettings set org.cinnamon.desktop.interface gtk-theme ${_themename}
    gsettings set org.cinnamon.desktop.wm.preferences theme ${_themename}
    gsettings set org.cinnamon.theme name ${_themename}
  fi

  sudo sed -i 's/#theme-name=/theme-name=Adapta/' /etc/lightdm/lightdm-gtk-greeter.conf
}

install() {
  pacman -Q "$@" &> /dev/null
  local status=$?
  if [ $status -ne 0 ]; then
    install_array=("${install_array[@]}" "$@")
  fi
}

cinnamon() {
  #dconf dump /org/cinnamon/>dconf/cinnamon/cinnamon.dconf
  dconf load /org/cinnamon/<"${DIR}"/dconf/cinnamon/cinnamon.dconf
  #dconf load /org/cinnamon/desktop/keybindings/ <"${DIR}"/dconf/cinnamon/nemo.dconf
  #dconf dump /org/nemo/>dconf/cinnamon/nemo.dconf
  dconf load /org/nemo/<"${DIR}"/dconf/cinnamon/nemo.dconf
  dconf load /org/gnome/<"${DIR}"/dconf/cinnamon/gnome.dconf

  # gsettings set org.nemo.desktop show-desktop-icons false
  # gsettings set org.cinnamon.muffin button-layout 'close,minimize,maximize:'
  # gsettings set org.cinnamon.desktop.interface gtk-decoration-layout 'close,minimize,maximize:'
  # gsettings set org.cinnamon.desktop.default-applications terminal 'gnome-terminal'
  # gsettings set org.cinnamon.desktop.background picture-uri 'file:///home/jguer/Documents/Wallpapers/1920x1080-1.jpg'
  # gsettings set org.cinnamon.desktop.background picture-options 'wallpaper'
  # gsettings set org.cinnamon.desktop.interface font-name 'Ubuntu 9'
  # gsettings set org.cinnamon.desktop.wm.preferences titlebar-font 'Ubuntu Bold 10'
  # gsettings set org.cinnamon.desktop.wm.preferences workspace-names ['Browse', 'Work', 'Standby', 'Media']
  # gsettings set org.cinnamon enabled-applets ['panel1:left:0:menu@cinnamon.org:0', 'panel1:left:1:workspace-switcher@cinnamon.org:15', 'panel1:center:0:calendar@cinnamon.org:13', 'panel1:right:5:notifications@cinnamon.org:4', 'panel1:right:1:removable-drives@cinnamon.org:6', 'panel1:right:2:keyboard@cinnamon.org:7', 'panel1:right:3:power@cinnamon.org:11', 'panel1:right:4:systray@cinnamon.org:12', 'panel1:right:6:sound@cinnamon.org:10', 'panel1:right:7:network@cinnamon.org:9', 'panel1:right:8:user@cinnamon.org:5']
}

budgie() {
  $INSTALLER gnome-control-center nautilus python2-nautilus
  #dconf dump /org/gnome/mutter/keybindings/ >mutter-keybindings.dconf
  dconf load /org/gnome/mutter/keybindings/ < "$DIR/dconf/mutter-keybindings.dconf"
  #dconf dump /org/gnome/desktop/wm/keybindings/ > budgie-keybindings.dconf
  dconf load /org/gnome/desktop/wm/keybindings/ < "$DIR/dconf/budgie-keybindings.dconf"
  #dconf dump /org/gnome/settings-daemon/plugins/media-keys/ > app-keybindings.dconf
  dconf load /org/gnome/settings-daemon/plugins/media-keys/ < "$DIR/dconf/app-keybindings.dconf"
  #dconf dump /org/gnome/nautilus/preferences/ > dotfiles/dconf/nautilus.dconf
  dconf load /org/gnome/nautilus/preferences/ < "$DIR/dconf/nautilus.dconf"
  gsettings set com.solus-project.budgie-wm button-layout 'close,minimize,maximize:appmenu'
  gsettings set com.solus-project.budgie-helper.workarounds fix-button-layout 'close,minimize,maximize:menu'
  gsettings set org.gnome.desktop.interface document-font-name 'Ubuntu 10'
  gsettings set org.gnome.desktop.interface font-name 'Ubuntu 10'
  gsettings set org.gnome.desktop.interface monospace-font-name 'Hack 10'
  gsettings set org.gnome.desktop.wm.preferences titlebar-font 'Ubuntu Bold 11'
  gsettings set org.gnome.mutter overlay-key 'Super_R'
  restore_theme
  restore_icon
}

dotfile() {
  cp -rsfvT "$DIR/home/" "$HOME/"
  #dconf dump /org/gnome/terminal/ > gnome-terminal.dconf
  #dconf load /org/gnome/terminal/ < "$DIR/dconf/gnome-terminal.dconf"
}

restore_apps() {
  while IFS='' read -r line || [[ -n "$line" ]]; do
    install "$line"
  done < "$1"
  if [ ${#install_array[@]} -ne 0 ]; then
    echo "Restoring Apps"
    $INSTALLER "${install_array[@]}"
  fi
}

restore_root_settings() {
  sudo cp -f "$DIR/root/etc/makepkg.conf" "/etc/makepkg.conf"
  sudo cp -f "$DIR/root/etc/pacman.conf" "/etc/pacman.conf"
  sudo cp -f "$DIR/root/etc/default/tlp" "/etc/default/tlp"
  sudo sed -i 's/#background=/background=\/etc\/lightdm\/background.jpg/' /etc/lightdm/lightdm-gtk-greeter.conf
}

set_wallpaper() {
  local wallpaper
  wallpaper=$(zenity --file-selection)
  if [[ "$CHOICE" =~ "Restore Budgie" ]]; then
    gsettings set org.gnome.desktop.screensaver picture-uri "file://${wallpaper}"
    gsettings set org.gnome.desktop.screensaver picture-options 'wallpaper'
    gsettings set org.gnome.desktop.background picture-uri "file://${wallpaper}"
    gsettings set org.gnome.desktop.background picture-options 'spanned'
  fi

  if [[ "$CHOICE" =~ "Restore Cinnamon" ]]; then
    gsettings set org.cinnamon.desktop.background picture-uri "file://${wallpaper}"
    gsettings set org.cinnamon.desktop.background picture-options 'spanned'
  fi

  sudo cp -f "$wallpaper" "/etc/lightdm/background.jpg"
  sudo chown lightdm:lightdm "/etc/lightdm/background.jpg"
}

restore_services() {
  sudo systemctl enable tlp-sleep.service tlp.service fstrim.timer thermald.service
  systemctl --user enable syncthing.service
  systemctl --user enable syncthing-inotify.service
}

restore_cobalt() {
  sudo cp -rfvT "$DIR/root/" /
  restore_apps "${DIR}/res/cobalt"
  sudo systemctl enable bumblebeed.service
}

restore_desktop() {
  sudo chown -R "$USER":users "/mnt/storage"
  declare -a From=("/mnt/storage/Videos" \
    "/mnt/storage/Archive" \
    "/mnt/storage/Music" \
    "/mnt/storage/Pictures" \
    "/mnt/storage/Downloads" \
    "/mnt/storage/Projects");

  declare -a To=("$HOME/Videos" \
    "$HOME/Archive" \
    "$HOME/Music" \
    "$HOME/Pictures" \
    "$HOME/Downloads" \
    "$HOME/Projects");

  max=${#From[@]}
  (( max -= 1 ))

  for i in $(seq 0 $max); do
    rm -R "${To[i]}"
    ln -sfT "${From[i]}" "${To[i]}"
  done
}

cli_menu() {
  COLUMNS=12

  all_done=0
  while (( !all_done )); do
    options=("Restore root settings" "Install yay"\
      "Install other packages" "Restore Budgie"\
      "Restore Cinnamon" "Restore Dotfile"\
      "Restore Shell" "Restore Theme"\
      "Restore Icon" "Restore Services"\
      "Quit")

    echo "Choose an option: "
    select opt in "${options[@]}"; do
      case $opt in
        1) restore_root_settings; break ;;
        2) bash "$DIR/res/install_yay"; break ;;
        3) restore_apps; break ;;
        4) budgie; break ;;
        5) cinnamon; break ;;
        6) dotfile; break ;;
        7) restore_shell; break ;;
        8) restore_theme; break ;;
        9) restore_icon; break ;;
        10) restore_services; break ;;
        11) all_done=1; break ;;
        *) echo "Invalid option" ;;
      esac
    done
    clear
  done

}

zenity_menu() {
  CHOICE=$(zenity --list \
    --title="Restore Menu" \
    --text="Select Options for restore" \
    --window-icon=preferences-system \
    --height=340 \
    --width=200 \
    --checklist \
    --column="" --column="Option" \
    FALSE "Restore root settings" \
    FALSE "Desktop Specific" \
    FALSE "Cobalt Specific" \
    FALSE "Install yay" \
    FALSE "Install other packages" \
    FALSE "Restore Services" \
    FALSE "Restore Budgie" \
    FALSE "Restore Cinnamon" \
    FALSE "Restore Dotfile" \
    FALSE "Restore Shell" \
    FALSE "Restore Theme" \
    FALSE "Restore Icon" \
    FALSE "Set Wallpaper")

  if [[ "$CHOICE" =~ "Restore Budgie" && "$CHOICE" =~ "Restore Cinnamon" ]]; then
    zenity --warning --text "Picked both Desktop Environments"
    zenity_menu
    exit
  fi

  if [[ "$CHOICE" =~ "Desktop Specific" && "$CHOICE" =~ "Laptop Specific" ]]; then
    zenity --warning --text "Chose too many specifics"
    zenity_menu
    exit
  fi

  if [[ "$CHOICE" =~ "Restore root settings" ]]; then
    restore_root_settings
  fi

  if [[ "$CHOICE" =~ "Desktop Specific" ]]; then
    restore_desktop
  fi

  if [[ "$CHOICE" =~ "Cobalt Specific" ]]; then
    restore_cobalt
  fi

  if [[ "$CHOICE" =~ "Install yay" ]]; then
    bash "$DIR/res/install_yay"
  fi

  if [[ "$CHOICE" =~ "Install other packages" ]]; then
    restore_apps "${DIR}/res/install"
  fi

  if [[ "$CHOICE" =~ "Restore Services" ]]; then
    restore_services
  fi

  if [[ "$CHOICE" =~ "Restore Budgie" ]]; then
    budgie
  fi

  if [[ "$CHOICE" =~ "Restore Cinnamon" ]]; then
    cinnamon
  fi

  if [[ "$CHOICE" =~ "Restore Dotfile" ]]; then
    dotfile
  fi

  if [[ "$CHOICE" =~ "Restore Shell" ]]; then
    restore_shell
  fi

  if [[ "$CHOICE" =~ "Restore Theme" ]]; then
    restore_theme
  fi

  if [[ "$CHOICE" =~ "Restore Icon" ]]; then
    restore_icon
  fi

  if [[ "$CHOICE" =~ "Set Wallpaper" ]]; then
    set_wallpaper
  fi
}

# Main
## check options and arguments
if [ "$OPTIND" = 1 ]; then
  while getopts ":c" OPT
  do
    case $OPT in
      c)
        ZENITY=false
        ;;
      h)
        echo "[debug]h option. display help"
        usage
        ;;
      \?)
        echo "Try to enter the -h option" 1>&2
        ;;
    esac
  done
else
  echo "No installed getopts-command" 1>&2
  exit 1
fi

shift $((OPTIND - 1))
sudo -v

clear
if [ $ZENITY == true ]; then
  zenity_menu
else
  cli_menu
fi

notify-send -i info "Finished Restore" -t 500
